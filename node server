// files structure for it 
// set server node http 
//set express server env 
//set mongoose 
//set env file

fs : /home/suraj/app/be.js

//node server 
const http= require("http")

htt.createServer( frunction(req,res)
httpheader{200, {content type : txt/html};
res.end;})./listen(3000);

//express server 
const express = require("express");
const mongoose = requires("mongoose");
const path = require("path");
require('dotenv').config();

const app=express();
const PORT =process.env.PORT || 5000;

app.use(express.json());
app.use(express.static(path.join(_drirname,'..','public')));

//connect mongodb
mongoose.connect(process.env.MONGO_URL,{useNewUrlParser:true,useUnifiedTopoogy:true})
.then(() => console.log("MongoDB Connected"))
.catch(err => console.error(err));

//schema
 const Taskschema = new mongoose.Schema({   title:String, completes:Boolean });
conts Task =mongoose.model('Task',TaskSchema);

//api route 
app.get('/api/tasks',async(req,res) => { const tasks=await task.find();
res.json(tasks); });

app.post('/api/tasks',async(req,res) => { const newTask= new Task(req.body);
await newTask.save();
res.json(newTask); });

app.delete('api/tasks/:id,ascync(req,res) => { 
awaitTask.findByIdDelete(req.params.id);
res.json({success:true}); }); 

app.listen(PORT, () => console.log('Server run on por ${port'));

//.env
MONGO_URI=our mongodb atlas connection

// jwt auth npm install jesonwebtoken dotenv 
const jwt = require("jsonwebtoken");
require('dotnev").config();

app.use(express.json());

// user in db 
const user ( 
id:1,
username:'testuser'.
password:'password123' //store in secret
};

// generate jwt token 
function authenticateToken(user) { 
return jwt.sign({ id:user.id, username: user.username }, process.env.JWT_SECRET.{ expressIn:'th'}); }

//middleware to verify token 
function authToken(req,res,next) { 
const authHeader


//o auth
//payment gateway 





